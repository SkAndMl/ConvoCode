React Developer Tools – ReactJoin us for React Conf on May 15-16.Learn more.ReactSearch⌘CtrlKLearnReferenceCommunityBlogGET STARTEDQuick Start Tutorial: Tic-Tac-Toe Thinking in React Installation Start a New React Project Add React to an Existing Project Editor Setup Using TypeScript React Developer Tools LEARN REACTDescribing the UI Your First Component Importing and Exporting Components Writing Markup with JSX JavaScript in JSX with Curly Braces Passing Props to a Component Conditional Rendering Rendering Lists Keeping Components Pure Your UI as a Tree Adding Interactivity Responding to Events State: A Component's Memory Render and Commit State as a Snapshot Queueing a Series of State Updates Updating Objects in State Updating Arrays in State Managing State Reacting to Input with State Choosing the State Structure Sharing State Between Components Preserving and Resetting State Extracting State Logic into a Reducer Passing Data Deeply with Context Scaling Up with Reducer and Context Escape Hatches Referencing Values with Refs Manipulating the DOM with Refs Synchronizing with Effects You Might Not Need an Effect Lifecycle of Reactive Effects Separating Events from Effects Removing Effect Dependencies Reusing Logic with Custom Hooks Is this page useful?Learn ReactInstallationReact Developer ToolsUse React Developer Tools to inspect React components, edit props and state, and identify performance problems. You will learn How to install React Developer Tools Browser extension The easiest way to debug websites built with React is to install the React Developer Tools browser extension. It is available for several popular browsers: Install for Chrome Install for Firefox Install for Edge Now, if you visit a website built with React, you will see the Components and Profiler panels. Safari and other browsers For other browsers (for example, Safari), install the react-devtools npm package: # Yarnyarn global add react-devtools# Npmnpm install -g react-devtools Next open the developer tools from the terminal: react-devtools Then connect your website by adding the following <script> tag to the beginning of your website’s <head>: <html> <head> <script src="http://localhost:8097"></script> Reload your website in the browser now to view it in developer tools. Mobile (React Native) React Developer Tools can be used to inspect apps built with React Native as well. The easiest way to use React Developer Tools is to install it globally: # Yarnyarn global add react-devtools# Npmnpm install -g react-devtools Next open the developer tools from the terminal. react-devtools It should connect to any local React Native app that’s running. Try reloading the app if developer tools doesn’t connect after a few seconds. Learn more about debugging React Native.PreviousUsing TypeScriptHow do you like these docs?Take our survey!©2024Learn ReactQuick StartInstallationDescribing the UIAdding InteractivityManaging StateEscape HatchesAPI ReferenceReact APIsReact DOM APIsCommunityCode of ConductMeet the TeamDocs ContributorsAcknowledgementsMoreBlogReact NativePrivacyTermsOn this pageOverviewBrowser extension Safari and other browsers Mobile (React Native)